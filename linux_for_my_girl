Linux reference  for my girl(debian)

/***********************************
刘宇辉
wolfpythonlondon@gmail.com
dedicated to my love ,caoli.
************************************/

#在linux系统里，
#"~" 符号代表的是用户家目录的意思，比如我是wolf, "~"代表 /home/wolf
#"." ,".."分别为本目录，上一层目录的意思，比如：
# wolf@debian:~/eva$ pwd   #打印当前目录的绝对路径
#  /home/wolf/eva
# wolf@debian:~/eva$ ls -a  #列出当前目录下面所有文件
# .  ..  eva_using_qt4_devdoc  .git
#上一行的".",".."指的是 /home/wolf/eva, /home/wolf。


linux 基本命令
文件的操作：
跳转 ----> cd: 跳转到某一个目录
	      $cd ~/test #跳转到test这个目录
复制 ---->  cp:复制一个文件到一个目录
	      $cp test.sh ~/test  #这个复制的是普通文件
	      $cp -r ~/eva  ~/test #如果要复制一个目录，可以加上一个选项 -r,选项就是可以让一个命令拥有不同行为属性的参数

移动（重命名）mv: 移动一个文件到另一个文件（特殊的，如果都为普通文件的话，相当于重命名）
	      $mv test.sh ~/test 
	      $mv ~/eva ~/test
	      $mv test.sh scprit.sh #这个相当于重命名

新建文件--> touch: 新建一个文件
	      $touch test.sh
	      $vim test.sh    #其实，在实际操作中很少有直接使用touch来创建一个文件，都是通过一个编辑器(比如vim)。

新建一个目录 mkdir: 新建一个文件
	      $mkdir ~/test/newdir

删除一个文件 rm :删除一个文件
 	      $rm test.sh  #删除普通文件
	      $rm -r ~/test/newdir  #删除一个目录，无论目录是否为空，有一个命令rmdir，这个很少用到，只能删除空的目录

列举文件及其属性 ls: 列举一个文件及其属性
	      $ ls  #默认的列举当前目录下面的文件，隐藏文件不列出
	      比如：
	      wolf@debian:~/test$ ls
	      test.sh
	      $ls -a #列举当前目录下面的所有文件，包括隐藏文件
	      wolf@debian:~/test$ ls -a
	      .  ..  test.sh  .vim
	      $ls -l ~/test  #列举目录下面各文件的属性，l 代表long(长列表的意思)
	      wolf@debian:~/test$ ls -l
	      总用量 0
	      -rw-r--r-- 1 wolf wolf 0  7月 17 20:07 test.sh
	      其中第一字段rw-r--r--意思是 文件属主wolf对test.sh有读，写的权限，wolf组的成员有读的权限，1 的意思是
	      指向文件的node数为1，如果建立一个文件的硬连接,就会变为2。第二，第三字段分别表示文件的属主，和组。
	      后一个字段表示文件的大小，该文件为空文件。 后面的时间是文件创建(修改)的时间,最后是文件名。
	      $ls -i  #列举文件的索引节点(inode)号
	      wolf@debian:~/test$ ls -ali
	      总用量 8
	      2622727 drwxr-xr-x  2 wolf wolf 4096  7月 17 20:14 .
	      8193 drwxr-xr-x 61 wolf wolf 4096  7月 17 20:17 ..
	      2622661 lrwxrwxrwx  1 wolf wolf    7  7月 17 20:13 test1.sh -> test.sh
	      2622730 -rw-r--r--  2 wolf wolf    0  7月 17 20:07 test2.sh
	      2622730 -rw-r--r--  2 wolf wolf    0  7月 17 20:07 test.sh
	      2622721 -rw-r--r--  1 wolf wolf    0  7月 17 20:08 .vim
	      输出的第一字段是索引节点号.
	      $ls -s #列举文件的块大小
	      wolf@debian:~/test$ ls -sail ~/test
	      总用量 8
	      2622727 4 drwxr-xr-x  2 wolf wolf 4096  7月 17 20:14 .
	      8193 4 drwxr-xr-x 61 wolf wolf 4096  7月 17 20:36 ..
	      2622661 0 lrwxrwxrwx  1 wolf wolf    7  7月 17 20:13 test1.sh -> test.sh
	      2622730 0 -rw-r--r--  2 wolf wolf    0  7月 17 20:07 test2.sh
	      2622730 0 -rw-r--r--  2 wolf wolf    0  7月 17 20:07 test.sh
	      2622721 0 -rw-r--r--  1 wolf wolf    0  7月 17 20:08 .vim
	      输出的第二个字段就是块大小。

查看文件---> cat：查看普通文件.
              $cat file
	      wolf@debian:~/test$  cat test.sh
	      I love my girl .
	      She is my soul.
	      I hope I can stay with her in my whole life .
	      What I want to do is love her.
	      $cat -n file #为输出加入行号
	      wolf@debian:~/test$ cat -n test.sh
	           1	I love my girl .
		   2	She is my soul.
		   3	I hope I can stay with her in my whole life .
		   4	What I want to do is love her.
	      
	---> more:分页查看文件
	     $more file
	     这个在查看长文档时才显示其优势。

	---> less： 与more差不多。

	---> head/tail： 查看文件的头/尾，默认的是十行
	     $head -n 2 file #查看文件的前两行
	     wolf@debian:~/test$ head -n 2 test.sh
	     I love my girl .
	     She is my soul.
	     $tail -n 2 file #查看文件的后两行
	     wolf@debian:~/test$ tail  -n 2 test.sh
	     I hope I can stay with her in my whole life .
	     What I want to do is love her.



通配符(wildcard,glob):
* ---> 匹配任意个字符，0到无穷
? ---> 匹配一个字符
[a-z],[1-9]  匹配从a 到z,1到9 的字符
wolf@debian:~/test$ ls test*
test1.sh  test2.sh  test.sh
wolf@debian:~/test$ ls test?.sh
test1.sh  test2.sh
wolf@debian:~/test$ ls test[1-9].sh
test1.sh  test2.sh


一些有趣儿的命令:
日期 ---> date :默认显示当前区域的当前时间，
         比如：
         wolf@debian:~/public/notes$ date
	 2010年 07月 19日 星期一 22:07:54 CST
	 $date +"%Y %m %d   %H:%M"  #格式化输出
	 wolf@debian:~/public/notes$ date +"%Y %m %d  %H:%M"
	 2010 07 19  22:11
	 这个命令记起来可能比较繁琐，怎么一会又大写，又小写，可以这么记忆
	 大写优先，但是月份(month）和日(day)比较特殊，大写的M是代表“分钟”
	 大写的D代表的是%m%d%y,即简短的日期。这个方法不是很严密和准确呵呵。
日历 --->cal(calender): 默认显示当月的日历，当前的日期会有阴影。
         比如：
	 wolf@debian:~/public/notes$ cal
	       七月 2010
	  日 一 二 三 四 五 六 
	             1  2  3
	  4  5  6  7  8  9 10
         11 12 13 14 15 16 17
	 18 19 20 21 22 23 24
	 25 26 27 28 29 30 31

	 我们来查看一个特殊的月份（2012, 12 ）
	 wolf@debian:~/public/notes$ cal 12 2012
	       十二月 2012
	  日 一 二 三 四 五 六 
                            1
          2  3  4  5  6  7  8
	  9 10 11 12 13 14 15
         16 17 18 19 20 21 22
	 23 24 25 26 27 28 29
	 30 31

算术计算--->bc : 任意精度的计算器语言(An arbitrary precision calculator language）,
		说到底，它就是一个计算器程序。
		wolf@debian:~/public/notes$ bc
		bc 1.06.95
		Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006 Free Software Foundation, Inc.
		This is free software with ABSOLUTELY NO WARRANTY.
		For details type `warranty'. 

		1+2                  #执行普通的加减
		3
		x=1                  #因为是一门语言，可以声明一个变量，并为之赋初值
		y=2
		x+y
		3
		scale=4             #scale指定运算的精度，默认的是0
		x+y
		3
		x/(x+y)
		.3333
                此外，bc还有定义函数。调用的功能，感兴趣的参考相关的文档。（unix技术手册）


*******************************************************************************************************************************
上面的是基本的linux命令，下面系统介绍一下linux的档案文件及

Linux档案文件的权限对象分为三类:文件属(owner)主，群组（group)，其他(others).
属主帐号配置文件位于/etc/passwd，密码放在/etc/shadow，群组记录在/etc/group。
这三个档案文件非常重要，如果误删的话，有可能导致进不了系统。

linux档案的属性
 用开始的ls命令来看看一个文档的属性：
 wolf@debian:~/test$ ls -l 
 总用量 16
 -rw-r--r-- 1 wolf wolf 1549  7月 19 15:47 1.c
 -rw-r--r-- 1 wolf wolf  300  7月 19 15:57 2.c
 -rwxr-xr-x 1 root root 5466  7月 19 16:05 a.out
 第一字段是权限， 第二字段是指向索引节点的连接数，第三，第四分别为属主和群组，接下来的是文件
 的大小， 最后的修改时间 和文件名。

 文件的权限
 文件的权限分为r(read),w(write),x(excute),可读，可写，可执行。我们可以把他当作二进制数来处理
 即：111， 权分别为4，2，1。如果把权限对应的十进制数加起来，就可以这样表示权限。比如：
 Line[189]的 rw- 可以表示成6。 对于一个普通文档来说rwx权限很好理解，那对于目录呢？
 ----> r (read contents of the dir): 可以读取目录的结构，比如使用ls 命令。
 ----> w (write contents of the dir): 可以向目录结构中写，具体的就是新建，修改，删除文件。
 ----> x (acess dir) : 目录不能执行，x 代表的是进入目录的意思。
 由于对目录结构的操作涉及到对目录里面文件的操作，所以，如果要想实际的操作，必须要对该目录具有
 x权限。
 我们来演示一下：
 root@debian:/home/wolf# ls -ld test
drwxr-xrw- 2 wolf wolf 4096  7月 19 16:05 test
root@debian:/home/wolf# su caoli
caoli@debian:/home/wolf$ ls -ld test
drwxr-xrw- 2 wolf wolf 4096  7月 19 16:05 test
caoli@debian:/home/wolf$ mkdir test/caoli  #虽然有W权限，但由于没有X权限，所以无法写入
mkdir: 无法创建目录"test/caoli": 权限不够
caoli@debian:/home/wolf$ su
密码：
root@debian:/home/wolf# chmod o+x test
root@debian:/home/wolf# su caoli
caoli@debian:/home/wolf$ mkdir test/caoli
caoli@debian:/home/wolf$ ls test/caoli
caoli@debian:/home/wolf$ ls test/caoli -l
总用量 0
caoli@debian:/home/wolf$ ls test/caoli -ld
drwxr-xr-x 2 caoli caoli 4096  7月 20 22:28 test/caoli

 











 于是乎，就有两种方式改变文件的权限。
 ---> 字母：
 root@debian:/home/wolf/test# ls -l a.out
 -rwxr-xr-x 1 root root 5466  7月 19 16:05 a.out
 root@debian:/home/wolf/test# chmod u-w,g+w,o-r a.out #还有一个字母是a，表示全部的类别。
 root@debian:/home/wolf/test# ls -l a.out
 -r-xrwx--x 1 root root 5466  7月 19 16:05 a.out
 ---> 数字:
 root@debian:/home/wolf/test# chmod 711 a.out  #就是把每个用户的权限对应的十进制值加起来
 root@debian:/home/wolf/test# ls -l a.out
 -rwx--x--x 1 root root 5466  7月 19 16:05 a.out
 总得来说，第一种方法很灵活，但是第二种更常用（对于我而言）

 oop，忘了介绍了第一个字段的第一个字符是什么意思了。
 这个字符显示了文档的类型。
 -  --->  普通文件（包括ascii文件，二进制文件，格式化文件）
 d  --->  目录
 l  --->  符合连接文件
 c  -->   字符设备文件，比如键盘，鼠标，在Unix世界里，一切都是文件,你看不到c盘的存在.
 b  --->  块设备文件，比如硬盘，U盘。
 s  --->  套接字(socket)文件
 p  --->  命名管道文件（pipe）




            





	     








